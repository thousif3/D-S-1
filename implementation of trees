#include<stdio.h>
#include<stdlib.h>
struct node{
	int data;
	struct node*left;
	struct node*right;
};
struct node*make_node(int value){
	struct node*new_node =(struct node*)malloc(sizeof(struct node));
	new_node->data=value;
	new_node->left=NULL;
	new_node->right=NULL;
	return new_node;
}
void inorder_traversal(struct node*root){
	if(root==NULL){
		return;
	}
	inorder_traversal(root->left);
	printf(" %d",root->data);
	inorder_traversal(root->right);
}
void postorder_traversal(struct node*root){
	if(root==NULL){
		return;
	}
	postorder_traversal(root->left);
	postorder_traversal(root->right);
	printf(" %d",root->data);
}
void preorder_traversal(struct node*root){
	if(root==NULL){
		return;
	}
	printf(" %d",root->data);
	preorder_traversal(root->left);
	preorder_traversal(root->right);
}
int main(){
	struct node*root=NULL;
	root=make_node(1);
	root->left=make_node(2);
	root->right=make_node(3);
	root->left->left=make_node(4);
	root->right->right=make_node(5);
	postorder_traversal(root);
	printf(" \n");
	preorder_traversal(root);
	printf("\n");
	inorder_traversal(root);
	return 0;
}
